import streamlit as st
from statsmodels.tsa.seasonal import seasonal_decompose
from utils import leitura_csv,decomposicao,teste_estatistico

st.set_page_config(page_title= 'Modelo - Decomposi√ß√£o e An√°lise', layout='wide', page_icon= ':fuelpump:')
st.title('Modelo - Decomposi√ß√£o e An√°lise da S√©rie Temporal üìä')

st.markdown('<p style="text-align: justify;"> Na decomposi√ß√£o sazonal de uma s√©rie temporal, os termos "multiplicativo" (multi) e "aditivo" (add) referem-se √† maneira como os componentes de tend√™ncia e sazonalidade s√£o combinados para reconstruir a s√©rie original.</p>', unsafe_allow_html = True)

## LEITURA DOS DADOS DO ARQUIVO GRAVADO
arquivo = 'dados_preco_petroleo.csv'
dados = leitura_csv(arquivo)

df_semanal = dados.resample('W')['Preco'].mean()
df_mensal = dados.resample('M')['Preco'].mean()
df_anual = dados.resample('Y')['Preco'].mean()

modelo = st.sidebar.selectbox("Selecione o modelo de decomposi√ß√£o", ['Multiplicativo','Aditivo'])
formato = st.sidebar.selectbox("Selecione o periodo de ciclos", ['1','7','30','365'])

if (modelo == 'Multiplicativo' and formato == '1'):
    st.markdown('<h2> Sazonalidade di√°ria com decomposi√ß√£o multiplicativa </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Multiplicativa:</span> S√©rie temporal modelada como o produto dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando a varia√ß√£o sazonal muda proporcionalmente com o n√≠vel da s√©rie temporal.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade di√°ria:</span> dados di√°rios definido com period=1.</p>', unsafe_allow_html = True)
    result_mult_diaria = seasonal_decompose(dados, period = 1, model='multiplicative')
    decomposicao(dados,result_mult_diaria)
    string_teste = 'Resultado referente aos dados di√°rios do pre√ßo do petr√≥leo:'
    teste_estatistico(dados,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Di√°rias:</span> Para s√©ries temporais di√°rias, podem ser observados lags significativos no ACF e PACF em torno de m√∫ltiplos de 7 (uma semana), indicando padr√µes semanais de autocorrela√ß√£o devido a comportamentos repetitivos que ocorrem a cada semana. Al√©m disso, para s√©ries temporais di√°rias, tamb√©m podem ser observados lags significativos em torno de 30 (um m√™s), indicando padr√µes mensais de autocorrela√ß√£o.</p>', unsafe_allow_html = True)

elif (modelo == 'Aditivo' and formato == '1'):
    st.markdown('<h2> Sazonalidade di√°ria com decomposi√ß√£o aditiva </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Aditiva:</span> S√©rie temporal modelada como a soma dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando varia√ß√£o sazonal √© aproximadamente constante ao longo do tempo.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade di√°ria:</span> dados di√°rios definido com period=1.</p>', unsafe_allow_html = True)
    result_adit_diaria = seasonal_decompose(dados, period = 1, model='aditive')
    decomposicao(dados,result_adit_diaria)   
    string_teste = 'Resultado referente aos dados di√°rios do pre√ßo do petr√≥leo:'
    teste_estatistico(dados,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Di√°rias:</span> Para s√©ries temporais di√°rias, podem ser observados lags significativos no ACF e PACF em torno de m√∫ltiplos de 7 (uma semana), indicando padr√µes semanais de autocorrela√ß√£o devido a comportamentos repetitivos que ocorrem a cada semana. Al√©m disso, para s√©ries temporais di√°rias, tamb√©m podem ser observados lags significativos em torno de 30 (um m√™s), indicando padr√µes mensais de autocorrela√ß√£o.</p>', unsafe_allow_html = True)

elif (modelo == 'Multiplicativo' and formato == '7'):
    st.markdown('<h2> Sazonalidade semanal com decomposi√ß√£o multiplicativa </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Multiplicativa:</span> S√©rie temporal modelada como o produto dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando a varia√ß√£o sazonal muda proporcionalmente com o n√≠vel da s√©rie temporal.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade semanal:</span> dados di√°rios definido period=7.</p>', unsafe_allow_html = True)
    result_mult_diaria = seasonal_decompose(dados, period = 7, model='multiplicative')
    decomposicao(dados,result_mult_diaria)
    string_teste = 'Resultado referente a m√©dia semanal do pre√ßo do petr√≥leo:'
    teste_estatistico(df_semanal,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Semanais:</span> Para s√©ries temporais semanais, podem ser observados lags significativos no ACF e PACF em torno de m√∫ltiplos de 4 (um m√™s), indicando padr√µes mensais de autocorrela√ß√£o. Al√©m disso, lags em torno de 52 (um ano) podem ser observados para capturar padr√µes anuais de autocorrela√ß√£o.</p>', unsafe_allow_html = True)

elif (modelo == 'Aditivo' and formato == '7'):
    st.markdown('<h2> Sazonalidade semanal com decomposi√ß√£o aditiva </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Aditiva:</span> S√©rie temporal modelada como a soma dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando varia√ß√£o sazonal √© aproximadamente constante ao longo do tempo.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade semanal:</span> dados di√°rios definido period=7.</p>', unsafe_allow_html = True)
    result_adit_diaria = seasonal_decompose(dados, period = 7, model='aditive')
    decomposicao(dados,result_adit_diaria)
    string_teste = 'Resultado referente a m√©dia semanal do pre√ßo do petr√≥leo:'
    teste_estatistico(df_semanal,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Semanais:</span> Para s√©ries temporais semanais, podem ser observados lags significativos no ACF e PACF em torno de m√∫ltiplos de 4 (um m√™s), indicando padr√µes mensais de autocorrela√ß√£o. Al√©m disso, lags em torno de 52 (um ano) podem ser observados para capturar padr√µes anuais de autocorrela√ß√£o.</p>', unsafe_allow_html = True)

elif (modelo == 'Multiplicativo' and formato == '30'):
    st.markdown('<h2> Sazonalidade mensal com decomposi√ß√£o multiplicativa </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Multiplicativa:</span> S√©rie temporal modelada como o produto dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando a varia√ß√£o sazonal muda proporcionalmente com o n√≠vel da s√©rie temporal.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade mensal:</span> dados di√°rios definido period=30.</p>', unsafe_allow_html = True)
    result_mult_diaria = seasonal_decompose(dados, period = 30, model='multiplicative')
    decomposicao(dados,result_mult_diaria)
    string_teste = 'Resultado referente a m√©dia mensal do pre√ßo do petr√≥leo:'
    teste_estatistico(df_mensal,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Mensais:</span> Para s√©ries temporais mensais, lags em torno de 12 (um ano) podem ser frequentemente ressaltados no ACF e PACF, indicando padr√µes anuais de autocorrela√ß√£o. Al√©m disso, para s√©ries mensais, tamb√©m podem ser observados lags em torno de 6 (meio ano) devido a sazonalidades semestrais.</p>', unsafe_allow_html = True)

elif (modelo == 'Aditivo' and formato == '30'):
    st.markdown('<h2> Sazonalidade mensal com decomposi√ß√£o aditiva </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Aditiva:</span> S√©rie temporal modelada como a soma dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando varia√ß√£o sazonal √© aproximadamente constante ao longo do tempo.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade mensal:</span> dados di√°rios definido period=30.</p>', unsafe_allow_html = True)
    result_adit_diaria = seasonal_decompose(dados, period = 30, model='aditive')
    decomposicao(dados,result_adit_diaria) 
    string_teste = 'Resultado referente a m√©dia mensal do pre√ßo do petr√≥leo:'
    teste_estatistico(df_mensal,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Mensais:</span> Para s√©ries temporais mensais, lags em torno de 12 (um ano) podem ser frequentemente ressaltados no ACF e PACF, indicando padr√µes anuais de autocorrela√ß√£o. Al√©m disso, para s√©ries mensais, tamb√©m podem ser observados lags em torno de 6 (meio ano) devido a sazonalidades semestrais.</p>', unsafe_allow_html = True)

elif (modelo == 'Multiplicativo' and formato == '365'):
    st.markdown('<h2> Sazonalidade anual com decomposi√ß√£o multiplicativa </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Multiplicativa:</span> S√©rie temporal modelada como o produto dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando a varia√ß√£o sazonal muda proporcionalmente com o n√≠vel da s√©rie temporal.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade anual:</span> dados di√°rios definido period=365.</p>', unsafe_allow_html = True)
    result_mult_diaria = seasonal_decompose(dados, period = 365, model='multiplicative')
    decomposicao(dados,result_mult_diaria)
    string_teste = 'Resultado referente a m√©dia anual do pre√ßo do petr√≥leo:'
    teste_estatistico(df_anual,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Anuais:</span> Para s√©ries temporais anuais, podem ser observados lags em torno de 1 (um ano) no ACF e PACF, indicando autocorrela√ß√£o anual. Al√©m disso, podem ser observados lags em torno de 5 (cinco anos) para capturar padr√µes de autocorrela√ß√£o de longo prazo. </p>', unsafe_allow_html = True)

elif (modelo == 'Aditivo' and formato == '365'):
    st.markdown('<h2> Sazonalidade anual com decomposi√ß√£o aditiva </h2>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Decomposi√ß√£o Aditiva:</span> S√©rie temporal modelada como a soma dos componentes de tend√™ncia, sazonalidade e res√≠duos. √ötil quando varia√ß√£o sazonal √© aproximadamente constante ao longo do tempo.</p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Sazonalidade anual:</span> dados di√°rios definido period=365.</p>', unsafe_allow_html = True)
    result_adit_diaria = seasonal_decompose(dados, period = 365, model='aditive')
    decomposicao(dados,result_adit_diaria)
    string_teste = 'Resultado referente a m√©dia anual do pre√ßo do petr√≥leo:'
    teste_estatistico(df_anual,string_teste)
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">S√©ries Temporais Anuais:</span> Para s√©ries temporais anuais, podem ser observados lags em torno de 1 (um ano) no ACF e PACF, indicando autocorrela√ß√£o anual. Al√©m disso, podem ser observados lags em torno de 5 (cinco anos) para capturar padr√µes de autocorrela√ß√£o de longo prazo. </p>', unsafe_allow_html = True)






